@page "/admin/Items/edit/{id:long}"
@page "/admin/Items/create"
@inherits OwningComponentBase<IStoreRepository>

<style>
    div.validation-message { color: rgb(220, 53, 69); font-weight: 500 }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Item</h3>
<EditForm Model="Item" OnValidSubmit="SaveItem">
    <DataAnnotationsValidator />
    @if(Item.ItemID != 0) {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Item.ItemID" />
        </div>
    }
    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => Item.Name)" />
        <InputText class="form-control" @bind-Value="Item.Name" />
    </div>
    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => Item.Description)" />
        <InputText class="form-control" @bind-Value="Item.Description" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => Item.Category)" />
        <InputText class="form-control" @bind-Value="Item.Category" />
    </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => Item.Price)" />
        <InputNumber class="form-control" @bind-Value="Item.Price" />
    </div>
    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/Items">Cancel</NavLink>
</EditForm>

@code {

    public IStoreRepository Repository => Service;

    [Inject]
    public NavigationManager NavManager { get; set; }

    [Parameter]
    public long Id { get; set; } = 0;

    public Item Item { get; set; } = new Item();

    protected override void OnParametersSet() {
        if (Id != 0) {
            Item = Repository.Items.FirstOrDefault(p => p.ItemID == Id);
        }
    }

    public void SaveItem() {
        if (Id == 0) {
            Repository.CreateItem(Item);
        } else {
            Repository.SaveItem(Item);
        }
        NavManager.NavigateTo("/admin/Items");
    }

    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";
}
